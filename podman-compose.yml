version: '3.8'

services:
  # Backend Service (Express + Node.js)
  server:
    build: ./server # Path to server Dockerfile directory
    container_name: scheduler-server
    command: ["sh", "-c", "sleep 10 && yarn dev"] # Consider yarn start for production if dev includes nodemon
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./server:/usr/src/app # Mount server code for development; for production, you might prefer COPY in Dockerfile
      - /usr/src/app/node_modules # Exclude node_modules from host mount
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=${PORT:-3000}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - DATABASE_URL=${DATABASE_URL} # <-- Added this line
      - JWT_SECRET=${JWT_SECRET} # Ensure this is sourced from .env or set securely
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d} # Added default, ensure it's in .env
      - CLIENT_URL=${CLIENT_URL}
    depends_on:
      - db
    networks:
      - scheduler-network

  # Frontend Service (Vue + Vite)
  client:
    build: ./client # Path to client Dockerfile directory
    container_name: scheduler-client
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - ./client:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      - server
    networks:
      - scheduler-network

  # Database Service (PostgreSQL)
  db:
    image: postgres:15
    container_name: scheduler-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - scheduler-network

# Define Networks
networks:
  scheduler-network:
    driver: bridge

# Define Volumes
volumes:
  postgres_data:

